---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: thanos
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: thanos
      version: 15.0.3
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true
        bucket: "${THANOS_BUCKET}"
        endpoint: "s3.itstoni.com"
        region: ""
        access_key: "${S3_ACCESS_KEY}"
        secret_key: "${S3_SECRET_KEY}"
    compactor:
      enabled: true
      extraFlags: ["--compact.concurrency", "4"]
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 20Gi
      ingress:
        enabled: true
        ingressClassName: internal
        hostname: thanos-compactor.${SECRET_DOMAIN}
        tls: true
    query:
      enabled: true
      replicaCount: 2
      podAntiAffinityPreset: hard
      replicaLabels:
        - replica
      dnsDiscovery:
        sidecarsService: prometheus-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: thanos.${SECRET_DOMAIN}
        ingressClassName: internal
        tls: true
    queryFrontend:
      enabled: false
    storegateway:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
    ruler:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers: ["http://prometheus-alertmanager.monitoring.svc.cluster.local:9093"]
      # Breaks any metric that has an existing "cluster" label on a metric
      # clusterName: home # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="prometheus-prometheus"})
      ingress:
        enabled: true
        hostname: thanos-ruler.${SECRET_DOMAIN}
        ingressClassName: internal
        tls: true
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 20Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
