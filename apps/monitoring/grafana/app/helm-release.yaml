---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 7.3.7
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16.2@sha256:32a8038176255df63d91c2f0cf216254f7ff49e48678fc9de21b0eead00566d8
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    deploymentStrategy:
      type: Recreate
    annotations:
      reloader.stakater.com/auto: "true"
    rbac:
      pspEnabled: false
    persistence:
      enabled: false
    testFramework:
      enabled: false
    admin:
      existingSecret: grafana-secret
      userKey: adminUser
      passwordKey: adminPassword
    env:
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${SSO_CLIENT_SECRET}
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${SSO_CLIENT_ID}
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        signout_redirect_url: https://sso.${SECRET_DOMAIN}/application/o/grafana/end-session/
        oauth_auto_login: true
      auth.generic_oauth:
        name: authentik
        enabled: true
        scopes: "openid profile email"
        auth_url: "https://sso.${SECRET_DOMAIN}/application/o/authorize/"
        token_url: "https://sso.${SECRET_DOMAIN}/application/o/token/"
        api_url: "https://sso.${SECRET_DOMAIN}/application/o/userinfo/"
        role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
      auth.basic:
        enabled: true
      auth.anonymous:
        enabled: true
        org_id: 1
        org_role: Viewer
      date_formats:
        use_browser_locale: true
        full_date: "MMM Do, YYYY hh:mm:ss a"
      explore:
        enabled: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
        filters: rendering:debug
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      security:
        allow_embedding: true
        cookie_samesite: grafana
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
      users:
        auto_assign_org: true
        auto_assign_org_id: 1
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "cilium"
            orgId: 1
            folder: "Cilium"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: "data"
            orgId: 1
            folder: "Data"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "loki"
            orgId: 1
            folder: "Loki"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "system"
            orgId: 1
            folder: "System"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          - name: "thanos`"
            orgId: 1
            folder: "Thanos"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/thanos
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:10902/
            isDefault: false
            jsonData:
              prometheusType: Thanos
              timeInterval: 1m
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            version: 1
            isDefault: true
            jsonData:
              maxLines: 100
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://prometheus-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Redis
            type: redis-datasource
            access: proxy
            url: redis://dragonfly.db.svc.cluster.local:6379
            jsonData:
              client: standalone
              poolSize: 5
              timeout: 10
              pingInterval: 0
              pipelineWindow: 0
            editable: true
    ingress:
      enabled: true
      ingressClassName: internal
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      path: /
      pathType: Prefix
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    plugins:
      - pr0ps-trackmap-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - natel-plotly-panel
      - vonage-status-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        labelValue: ""
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
    dashboards:
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.3/install/kubernetes/cilium/files/cilium-agent/dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.3/install/kubernetes/cilium/files/cilium-operator/dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.3/install/kubernetes/cilium/files/hubble/dashboards/hubble-dashboard.json
          datasource: Prometheus
      data:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/grafana-dashboards/main/charts/cluster/grafana-dashboard.json
          datasource: Prometheus
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Exporter Quickstart and Dashboard"
          gnetId: 14091
          revision: 1
          datasource: Prometheus
        redis-sentinel:
          # renovate: depName="Redis"
          gnetId: 12776
          revision: 2
          datasource: Redis
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 16
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 17
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      loki:
        loki-metrics:
          # renovate: depName="Loki2.0 Global Metrics"
          gnetId: 13407
          revision: 1
          datasource: Prometheus
      system:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457 # https://grafana.com/grafana/dashboards/17457?tab=revisions
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 36
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        # cert-manager:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
        #   datasource: Prometheus
        #ingress-nginx:
        #  url: https://raw.githubusercontent.com/kubernetes/main/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        #  datasource: Prometheus
        #ingress-nginx-request-handling-performance:
        #  url: https://raw.githubusercontent.com/kubernetes/main/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
        #  datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      thanos:
        thanos-bucket-replicate-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receive-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
