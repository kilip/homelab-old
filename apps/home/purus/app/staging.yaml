# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: purus-staging
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: fs
  values:
    controllers:
      purus:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          api:
            image:
              repository: ghcr.io/kilip/purus-php
              tag: ghcr.io/kilip/purus-php:main-057b0095687cbd1be93ea67c4490300413897886-20240414175506 # {"$imagepolicy": "flux-system:purus-php-staging"}
            env:
              APP_ENV: prod
              PWA_UPSTREAM: purus-staging-pwa.home.svc.cluster.local:3000
              SERVER_NAME: &apiServer http://purus-staging.${SECRET_DOMAIN}
              MERCURE_PUBLIC_URL: https://purus-staging.${SECRET_DOMAIN}/.well-known/mercure
              MERCURE_URL: https://purus-staging.${SECRET_DOMAIN}/.well-known/mercure
              MERCURE_EXTRA_DIRECTIVES: cors_origins http://purus-staging.${SECRET_DOMAIN} https://purus-staging.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: purus-staging-secrets
            resources:
              limits:
                memory: 512Mi
          pwa:
            image:
              repository: ghcr.io/kilip/purus-pwa
              tag: ghcr.io/kilip/purus-pwa:main-057b0095687cbd1be93ea67c4490300413897886-20240414175506 # {"$imagepolicy": "flux-system:purus-pwa-staging"}
            env:
              NEXT_PUBLIC_ENTRYPOINT: *apiServer
    service:
      api:
        controller: purus
        ports:
          http:
            port: 80
          https:
            port: 443
      pwa:
        controller: purus
        ports:
          http:
            port: 3000
    ingress:
      api:
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "purus-staging.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: api
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      caddyfile:
        type: secret
        name: purus-staging-secrets
        defaultMode: 256
        globalMounts:
          - path: /etc/caddy/Caddyfile
            subPath: CADDYFILE
